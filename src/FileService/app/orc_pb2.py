# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: orc.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

import zlib
import snappy
import os
_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\torc.proto\x12\x05proto\"B\n\x11IntegerStatistics\x12\x0f\n\x07minimum\x18\x01 \x01(\x12\x12\x0f\n\x07maximum\x18\x02 \x01(\x12\x12\x0b\n\x03sum\x18\x03 \x01(\x12\"A\n\x10\x44oubleStatistics\x12\x0f\n\x07minimum\x18\x01 \x01(\x01\x12\x0f\n\x07maximum\x18\x02 \x01(\x01\x12\x0b\n\x03sum\x18\x03 \x01(\x01\"A\n\x10StringStatistics\x12\x0f\n\x07minimum\x18\x01 \x01(\t\x12\x0f\n\x07maximum\x18\x02 \x01(\t\x12\x0b\n\x03sum\x18\x03 \x01(\x12\"%\n\x10\x42ucketStatistics\x12\x11\n\x05\x63ount\x18\x01 \x03(\x04\x42\x02\x10\x01\"B\n\x11\x44\x65\x63imalStatistics\x12\x0f\n\x07minimum\x18\x01 \x01(\t\x12\x0f\n\x07maximum\x18\x02 \x01(\t\x12\x0b\n\x03sum\x18\x03 \x01(\t\"2\n\x0e\x44\x61teStatistics\x12\x0f\n\x07minimum\x18\x01 \x01(\x11\x12\x0f\n\x07maximum\x18\x02 \x01(\x11\"_\n\x13TimestampStatistics\x12\x0f\n\x07minimum\x18\x01 \x01(\x12\x12\x0f\n\x07maximum\x18\x02 \x01(\x12\x12\x12\n\nminimumUtc\x18\x03 \x01(\x12\x12\x12\n\nmaximumUtc\x18\x04 \x01(\x12\"\x1f\n\x10\x42inaryStatistics\x12\x0b\n\x03sum\x18\x01 \x01(\x12\"\xd5\x03\n\x10\x43olumnStatistics\x12\x16\n\x0enumberOfValues\x18\x01 \x01(\x04\x12/\n\rintStatistics\x18\x02 \x01(\x0b\x32\x18.proto.IntegerStatistics\x12\x31\n\x10\x64oubleStatistics\x18\x03 \x01(\x0b\x32\x17.proto.DoubleStatistics\x12\x31\n\x10stringStatistics\x18\x04 \x01(\x0b\x32\x17.proto.StringStatistics\x12\x31\n\x10\x62ucketStatistics\x18\x05 \x01(\x0b\x32\x17.proto.BucketStatistics\x12\x33\n\x11\x64\x65\x63imalStatistics\x18\x06 \x01(\x0b\x32\x18.proto.DecimalStatistics\x12-\n\x0e\x64\x61teStatistics\x18\x07 \x01(\x0b\x32\x15.proto.DateStatistics\x12\x31\n\x10\x62inaryStatistics\x18\x08 \x01(\x0b\x32\x17.proto.BinaryStatistics\x12\x37\n\x13timestampStatistics\x18\t \x01(\x0b\x32\x1a.proto.TimestampStatistics\x12\x0f\n\x07hasNull\x18\n \x01(\x08\"S\n\rRowIndexEntry\x12\x15\n\tpositions\x18\x01 \x03(\x04\x42\x02\x10\x01\x12+\n\nstatistics\x18\x02 \x01(\x0b\x32\x17.proto.ColumnStatistics\"/\n\x08RowIndex\x12#\n\x05\x65ntry\x18\x01 \x03(\x0b\x32\x14.proto.RowIndexEntry\"K\n\x0b\x42loomFilter\x12\x18\n\x10numHashFunctions\x18\x01 \x01(\r\x12\x0e\n\x06\x62itset\x18\x02 \x03(\x06\x12\x12\n\nutf8bitset\x18\x03 \x01(\x0c\";\n\x10\x42loomFilterIndex\x12\'\n\x0b\x62loomFilter\x18\x01 \x03(\x0b\x32\x12.proto.BloomFilter\"\xe8\x01\n\x06Stream\x12 \n\x04kind\x18\x01 \x01(\x0e\x32\x12.proto.Stream.Kind\x12\x0e\n\x06\x63olumn\x18\x02 \x01(\r\x12\x0e\n\x06length\x18\x03 \x01(\x04\"\x9b\x01\n\x04Kind\x12\x0b\n\x07PRESENT\x10\x00\x12\x08\n\x04\x44\x41TA\x10\x01\x12\n\n\x06LENGTH\x10\x02\x12\x13\n\x0f\x44ICTIONARY_DATA\x10\x03\x12\x14\n\x10\x44ICTIONARY_COUNT\x10\x04\x12\r\n\tSECONDARY\x10\x05\x12\r\n\tROW_INDEX\x10\x06\x12\x10\n\x0c\x42LOOM_FILTER\x10\x07\x12\x15\n\x11\x42LOOM_FILTER_UTF8\x10\x08\"\xaf\x01\n\x0e\x43olumnEncoding\x12(\n\x04kind\x18\x01 \x01(\x0e\x32\x1a.proto.ColumnEncoding.Kind\x12\x16\n\x0e\x64ictionarySize\x18\x02 \x01(\r\x12\x15\n\rbloomEncoding\x18\x03 \x01(\r\"D\n\x04Kind\x12\n\n\x06\x44IRECT\x10\x00\x12\x0e\n\nDICTIONARY\x10\x01\x12\r\n\tDIRECT_V2\x10\x02\x12\x11\n\rDICTIONARY_V2\x10\x03\"n\n\x0cStripeFooter\x12\x1e\n\x07streams\x18\x01 \x03(\x0b\x32\r.proto.Stream\x12&\n\x07\x63olumns\x18\x02 \x03(\x0b\x32\x15.proto.ColumnEncoding\x12\x16\n\x0ewriterTimezone\x18\x03 \x01(\t\"\xdd\x02\n\x04Type\x12\x1e\n\x04kind\x18\x01 \x01(\x0e\x32\x10.proto.Type.Kind\x12\x14\n\x08subtypes\x18\x02 \x03(\rB\x02\x10\x01\x12\x12\n\nfieldNames\x18\x03 \x03(\t\x12\x15\n\rmaximumLength\x18\x04 \x01(\r\x12\x11\n\tprecision\x18\x05 \x01(\r\x12\r\n\x05scale\x18\x06 \x01(\r\"\xd1\x01\n\x04Kind\x12\x0b\n\x07\x42OOLEAN\x10\x00\x12\x08\n\x04\x42YTE\x10\x01\x12\t\n\x05SHORT\x10\x02\x12\x07\n\x03INT\x10\x03\x12\x08\n\x04LONG\x10\x04\x12\t\n\x05\x46LOAT\x10\x05\x12\n\n\x06\x44OUBLE\x10\x06\x12\n\n\x06STRING\x10\x07\x12\n\n\x06\x42INARY\x10\x08\x12\r\n\tTIMESTAMP\x10\t\x12\x08\n\x04LIST\x10\n\x12\x07\n\x03MAP\x10\x0b\x12\n\n\x06STRUCT\x10\x0c\x12\t\n\x05UNION\x10\r\x12\x0b\n\x07\x44\x45\x43IMAL\x10\x0e\x12\x08\n\x04\x44\x41TE\x10\x0f\x12\x0b\n\x07VARCHAR\x10\x10\x12\x08\n\x04\x43HAR\x10\x11\"x\n\x11StripeInformation\x12\x0e\n\x06offset\x18\x01 \x01(\x04\x12\x13\n\x0bindexLength\x18\x02 \x01(\x04\x12\x12\n\ndataLength\x18\x03 \x01(\x04\x12\x14\n\x0c\x66ooterLength\x18\x04 \x01(\x04\x12\x14\n\x0cnumberOfRows\x18\x05 \x01(\x04\"/\n\x10UserMetadataItem\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\"=\n\x10StripeStatistics\x12)\n\x08\x63olStats\x18\x01 \x03(\x0b\x32\x17.proto.ColumnStatistics\"8\n\x08Metadata\x12,\n\x0bstripeStats\x18\x01 \x03(\x0b\x32\x17.proto.StripeStatistics\"\x92\x02\n\x06\x46ooter\x12\x14\n\x0cheaderLength\x18\x01 \x01(\x04\x12\x15\n\rcontentLength\x18\x02 \x01(\x04\x12)\n\x07stripes\x18\x03 \x03(\x0b\x32\x18.proto.StripeInformation\x12\x1a\n\x05types\x18\x04 \x03(\x0b\x32\x0b.proto.Type\x12)\n\x08metadata\x18\x05 \x03(\x0b\x32\x17.proto.UserMetadataItem\x12\x14\n\x0cnumberOfRows\x18\x06 \x01(\x04\x12+\n\nstatistics\x18\x07 \x03(\x0b\x32\x17.proto.ColumnStatistics\x12\x16\n\x0erowIndexStride\x18\x08 \x01(\r\x12\x0e\n\x06writer\x18\t \x01(\r\"\xc1\x01\n\nPostScript\x12\x14\n\x0c\x66ooterLength\x18\x01 \x01(\x04\x12+\n\x0b\x63ompression\x18\x02 \x01(\x0e\x32\x16.proto.CompressionKind\x12\x1c\n\x14\x63ompressionBlockSize\x18\x03 \x01(\x04\x12\x13\n\x07version\x18\x04 \x03(\rB\x02\x10\x01\x12\x16\n\x0emetadataLength\x18\x05 \x01(\x04\x12\x15\n\rwriterVersion\x18\x06 \x01(\r\x12\x0e\n\x05magic\x18\xc0> \x01(\t\"~\n\x08\x46ileTail\x12%\n\npostscript\x18\x01 \x01(\x0b\x32\x11.proto.PostScript\x12\x1d\n\x06\x66ooter\x18\x02 \x01(\x0b\x32\r.proto.Footer\x12\x12\n\nfileLength\x18\x03 \x01(\x04\x12\x18\n\x10postscriptLength\x18\x04 \x01(\x04*M\n\x0f\x43ompressionKind\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04ZLIB\x10\x01\x12\n\n\x06SNAPPY\x10\x02\x12\x07\n\x03LZO\x10\x03\x12\x07\n\x03LZ4\x10\x04\x12\x08\n\x04ZSTD\x10\x05')

_COMPRESSIONKIND = DESCRIPTOR.enum_types_by_name['CompressionKind']
CompressionKind = enum_type_wrapper.EnumTypeWrapper(_COMPRESSIONKIND)
NONE = 0
ZLIB = 1
SNAPPY = 2
LZO = 3
LZ4 = 4
ZSTD = 5


_INTEGERSTATISTICS = DESCRIPTOR.message_types_by_name['IntegerStatistics']
_DOUBLESTATISTICS = DESCRIPTOR.message_types_by_name['DoubleStatistics']
_STRINGSTATISTICS = DESCRIPTOR.message_types_by_name['StringStatistics']
_BUCKETSTATISTICS = DESCRIPTOR.message_types_by_name['BucketStatistics']
_DECIMALSTATISTICS = DESCRIPTOR.message_types_by_name['DecimalStatistics']
_DATESTATISTICS = DESCRIPTOR.message_types_by_name['DateStatistics']
_TIMESTAMPSTATISTICS = DESCRIPTOR.message_types_by_name['TimestampStatistics']
_BINARYSTATISTICS = DESCRIPTOR.message_types_by_name['BinaryStatistics']
_COLUMNSTATISTICS = DESCRIPTOR.message_types_by_name['ColumnStatistics']
_ROWINDEXENTRY = DESCRIPTOR.message_types_by_name['RowIndexEntry']
_ROWINDEX = DESCRIPTOR.message_types_by_name['RowIndex']
_BLOOMFILTER = DESCRIPTOR.message_types_by_name['BloomFilter']
_BLOOMFILTERINDEX = DESCRIPTOR.message_types_by_name['BloomFilterIndex']
_STREAM = DESCRIPTOR.message_types_by_name['Stream']
_COLUMNENCODING = DESCRIPTOR.message_types_by_name['ColumnEncoding']
_STRIPEFOOTER = DESCRIPTOR.message_types_by_name['StripeFooter']
_TYPE = DESCRIPTOR.message_types_by_name['Type']
_STRIPEINFORMATION = DESCRIPTOR.message_types_by_name['StripeInformation']
_USERMETADATAITEM = DESCRIPTOR.message_types_by_name['UserMetadataItem']
_STRIPESTATISTICS = DESCRIPTOR.message_types_by_name['StripeStatistics']
_METADATA = DESCRIPTOR.message_types_by_name['Metadata']
_FOOTER = DESCRIPTOR.message_types_by_name['Footer']
_POSTSCRIPT = DESCRIPTOR.message_types_by_name['PostScript']
_FILETAIL = DESCRIPTOR.message_types_by_name['FileTail']
_STREAM_KIND = _STREAM.enum_types_by_name['Kind']
_COLUMNENCODING_KIND = _COLUMNENCODING.enum_types_by_name['Kind']
_TYPE_KIND = _TYPE.enum_types_by_name['Kind']
IntegerStatistics = _reflection.GeneratedProtocolMessageType('IntegerStatistics', (_message.Message,), {
  'DESCRIPTOR' : _INTEGERSTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.IntegerStatistics)
  })
_sym_db.RegisterMessage(IntegerStatistics)

DoubleStatistics = _reflection.GeneratedProtocolMessageType('DoubleStatistics', (_message.Message,), {
  'DESCRIPTOR' : _DOUBLESTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.DoubleStatistics)
  })
_sym_db.RegisterMessage(DoubleStatistics)

StringStatistics = _reflection.GeneratedProtocolMessageType('StringStatistics', (_message.Message,), {
  'DESCRIPTOR' : _STRINGSTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.StringStatistics)
  })
_sym_db.RegisterMessage(StringStatistics)

BucketStatistics = _reflection.GeneratedProtocolMessageType('BucketStatistics', (_message.Message,), {
  'DESCRIPTOR' : _BUCKETSTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.BucketStatistics)
  })
_sym_db.RegisterMessage(BucketStatistics)

DecimalStatistics = _reflection.GeneratedProtocolMessageType('DecimalStatistics', (_message.Message,), {
  'DESCRIPTOR' : _DECIMALSTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.DecimalStatistics)
  })
_sym_db.RegisterMessage(DecimalStatistics)

DateStatistics = _reflection.GeneratedProtocolMessageType('DateStatistics', (_message.Message,), {
  'DESCRIPTOR' : _DATESTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.DateStatistics)
  })
_sym_db.RegisterMessage(DateStatistics)

TimestampStatistics = _reflection.GeneratedProtocolMessageType('TimestampStatistics', (_message.Message,), {
  'DESCRIPTOR' : _TIMESTAMPSTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.TimestampStatistics)
  })
_sym_db.RegisterMessage(TimestampStatistics)

BinaryStatistics = _reflection.GeneratedProtocolMessageType('BinaryStatistics', (_message.Message,), {
  'DESCRIPTOR' : _BINARYSTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.BinaryStatistics)
  })
_sym_db.RegisterMessage(BinaryStatistics)

ColumnStatistics = _reflection.GeneratedProtocolMessageType('ColumnStatistics', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNSTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.ColumnStatistics)
  })
_sym_db.RegisterMessage(ColumnStatistics)

RowIndexEntry = _reflection.GeneratedProtocolMessageType('RowIndexEntry', (_message.Message,), {
  'DESCRIPTOR' : _ROWINDEXENTRY,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.RowIndexEntry)
  })
_sym_db.RegisterMessage(RowIndexEntry)

RowIndex = _reflection.GeneratedProtocolMessageType('RowIndex', (_message.Message,), {
  'DESCRIPTOR' : _ROWINDEX,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.RowIndex)
  })
_sym_db.RegisterMessage(RowIndex)

BloomFilter = _reflection.GeneratedProtocolMessageType('BloomFilter', (_message.Message,), {
  'DESCRIPTOR' : _BLOOMFILTER,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.BloomFilter)
  })
_sym_db.RegisterMessage(BloomFilter)

BloomFilterIndex = _reflection.GeneratedProtocolMessageType('BloomFilterIndex', (_message.Message,), {
  'DESCRIPTOR' : _BLOOMFILTERINDEX,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.BloomFilterIndex)
  })
_sym_db.RegisterMessage(BloomFilterIndex)

Stream = _reflection.GeneratedProtocolMessageType('Stream', (_message.Message,), {
  'DESCRIPTOR' : _STREAM,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.Stream)
  })
_sym_db.RegisterMessage(Stream)

ColumnEncoding = _reflection.GeneratedProtocolMessageType('ColumnEncoding', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNENCODING,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.ColumnEncoding)
  })
_sym_db.RegisterMessage(ColumnEncoding)

StripeFooter = _reflection.GeneratedProtocolMessageType('StripeFooter', (_message.Message,), {
  'DESCRIPTOR' : _STRIPEFOOTER,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.StripeFooter)
  })
_sym_db.RegisterMessage(StripeFooter)

Type = _reflection.GeneratedProtocolMessageType('Type', (_message.Message,), {
  'DESCRIPTOR' : _TYPE,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.Type)
  })
_sym_db.RegisterMessage(Type)

StripeInformation = _reflection.GeneratedProtocolMessageType('StripeInformation', (_message.Message,), {
  'DESCRIPTOR' : _STRIPEINFORMATION,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.StripeInformation)
  })
_sym_db.RegisterMessage(StripeInformation)

UserMetadataItem = _reflection.GeneratedProtocolMessageType('UserMetadataItem', (_message.Message,), {
  'DESCRIPTOR' : _USERMETADATAITEM,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.UserMetadataItem)
  })
_sym_db.RegisterMessage(UserMetadataItem)

StripeStatistics = _reflection.GeneratedProtocolMessageType('StripeStatistics', (_message.Message,), {
  'DESCRIPTOR' : _STRIPESTATISTICS,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.StripeStatistics)
  })
_sym_db.RegisterMessage(StripeStatistics)

Metadata = _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), {
  'DESCRIPTOR' : _METADATA,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.Metadata)
  })
_sym_db.RegisterMessage(Metadata)

Footer = _reflection.GeneratedProtocolMessageType('Footer', (_message.Message,), {
  'DESCRIPTOR' : _FOOTER,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.Footer)
  })
_sym_db.RegisterMessage(Footer)

PostScript = _reflection.GeneratedProtocolMessageType('PostScript', (_message.Message,), {
  'DESCRIPTOR' : _POSTSCRIPT,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.PostScript)
  })
_sym_db.RegisterMessage(PostScript)

FileTail = _reflection.GeneratedProtocolMessageType('FileTail', (_message.Message,), {
  'DESCRIPTOR' : _FILETAIL,
  '__module__' : 'orc_pb2'
  # @@protoc_insertion_point(class_scope:proto.FileTail)
  })
_sym_db.RegisterMessage(FileTail)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BUCKETSTATISTICS.fields_by_name['count']._options = None
  _BUCKETSTATISTICS.fields_by_name['count']._serialized_options = b'\020\001'
  _ROWINDEXENTRY.fields_by_name['positions']._options = None
  _ROWINDEXENTRY.fields_by_name['positions']._serialized_options = b'\020\001'
  _TYPE.fields_by_name['subtypes']._options = None
  _TYPE.fields_by_name['subtypes']._serialized_options = b'\020\001'
  _POSTSCRIPT.fields_by_name['version']._options = None
  _POSTSCRIPT.fields_by_name['version']._serialized_options = b'\020\001'
  _COMPRESSIONKIND._serialized_start=3025
  _COMPRESSIONKIND._serialized_end=3102
  _INTEGERSTATISTICS._serialized_start=20
  _INTEGERSTATISTICS._serialized_end=86
  _DOUBLESTATISTICS._serialized_start=88
  _DOUBLESTATISTICS._serialized_end=153
  _STRINGSTATISTICS._serialized_start=155
  _STRINGSTATISTICS._serialized_end=220
  _BUCKETSTATISTICS._serialized_start=222
  _BUCKETSTATISTICS._serialized_end=259
  _DECIMALSTATISTICS._serialized_start=261
  _DECIMALSTATISTICS._serialized_end=327
  _DATESTATISTICS._serialized_start=329
  _DATESTATISTICS._serialized_end=379
  _TIMESTAMPSTATISTICS._serialized_start=381
  _TIMESTAMPSTATISTICS._serialized_end=476
  _BINARYSTATISTICS._serialized_start=478
  _BINARYSTATISTICS._serialized_end=509
  _COLUMNSTATISTICS._serialized_start=512
  _COLUMNSTATISTICS._serialized_end=981
  _ROWINDEXENTRY._serialized_start=983
  _ROWINDEXENTRY._serialized_end=1066
  _ROWINDEX._serialized_start=1068
  _ROWINDEX._serialized_end=1115
  _BLOOMFILTER._serialized_start=1117
  _BLOOMFILTER._serialized_end=1192
  _BLOOMFILTERINDEX._serialized_start=1194
  _BLOOMFILTERINDEX._serialized_end=1253
  _STREAM._serialized_start=1256
  _STREAM._serialized_end=1488
  _STREAM_KIND._serialized_start=1333
  _STREAM_KIND._serialized_end=1488
  _COLUMNENCODING._serialized_start=1491
  _COLUMNENCODING._serialized_end=1666
  _COLUMNENCODING_KIND._serialized_start=1598
  _COLUMNENCODING_KIND._serialized_end=1666
  _STRIPEFOOTER._serialized_start=1668
  _STRIPEFOOTER._serialized_end=1778
  _TYPE._serialized_start=1781
  _TYPE._serialized_end=2130
  _TYPE_KIND._serialized_start=1921
  _TYPE_KIND._serialized_end=2130
  _STRIPEINFORMATION._serialized_start=2132
  _STRIPEINFORMATION._serialized_end=2252
  _USERMETADATAITEM._serialized_start=2254
  _USERMETADATAITEM._serialized_end=2301
  _STRIPESTATISTICS._serialized_start=2303
  _STRIPESTATISTICS._serialized_end=2364
  _METADATA._serialized_start=2366
  _METADATA._serialized_end=2422
  _FOOTER._serialized_start=2425
  _FOOTER._serialized_end=2699
  _POSTSCRIPT._serialized_start=2702
  _POSTSCRIPT._serialized_end=2895
  _FILETAIL._serialized_start=2897
  _FILETAIL._serialized_end=3023
# @@protoc_insertion_point(module_scope)




def get_orc_footer_from_path(path: str) -> int:
  size = os.path.getsize(path)
  print("file_size:{}".format(size))

  if size == 0:
      return 0
  if os.path.isdir(path):
      return 0


  psLen = 256
  if psLen > size:
      psLen = size

  secStart = size-psLen
  secEnd = size-1
  print("size: {} secStart: {} secEnd: {}, end-start:{}".format(size, secStart, secEnd, secEnd-secStart))
  file = open(path,"rb")
  file.seek(secStart,0)
  body = file.read()
  print("body type:{}" .format(type(body)))
  print("body le:{}" .format(len(body)))
  print("ps length {}".format(len(body)))

  # print("body: {}".format(body))
  # print("ps length {}".format(len(body)))
  psRealLen = body[-1]
  psStart = psLen-psRealLen-1
  psEnd = psLen-1
  print("psRealLen: {} psStart: {} psEnd: {}".format(
      psRealLen, psStart, psEnd))
  leftSize = size - psRealLen

  postScript = PostScript()
  postScript.ParseFromString(body[psStart:psEnd])
  # print(postScript)

  footerLength = postScript.footerLength
  print("footerLength: {}".format(footerLength))
  footerStart = leftSize - footerLength-1
  file = open(path,"rb")
  file.seek(footerStart,0)
  footerBody = file.read(footerLength)

  leftSize = leftSize - footerLength
  print("leftSize: {}".format(leftSize))


  if postScript.compression == NONE:
      decodedFooterBytes = footerBody
  elif postScript.compression == SNAPPY:
      if footerBody[0] % 2 != 1:
          decodedFooterBytes = snappy.decompress(footerBody[3:])
      else:
          decodedFooterBytes = footerBody[3:]
  elif postScript.compression == ZLIB:
      if footerBody[0] % 2 != 1:
          # print(footerBody.hex())
          decodedFooterBytes = zlib.decompress(footerBody[3:], wbits=-8)
      else:
          decodedFooterBytes = footerBody[3:]
  else:
      raise RuntimeError(
          "unsupported compress mode: {}".format(postScript.compression))

  footer = Footer()
  footer.ParseFromString(decodedFooterBytes)
  print(footer)
  return footer



def parse_orc_header(footer: Footer) -> list:
    root = footer.types[0]

    cols = []
    for i in range(0, len(root.subtypes)):
        cols.append(root.fieldNames[i])        
    return cols